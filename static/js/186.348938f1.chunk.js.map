{"version":3,"file":"static/js/186.348938f1.chunk.js","mappings":"2KAgBA,EAhBoB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACrB,OACE,wBACGA,EAAQC,KAAI,SAAAC,GACX,OACE,2BACE,0BACE,0BAAM,cAAgB,IAAEA,EAAKC,WAE/B,uBAAID,EAAKE,YAJFF,EAAKG,GAOjB,KAGN,E,0BCeD,EAzBgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAUR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GACJR,EAAWQ,EAAKC,QACjB,IACAC,OAAM,SAAAT,GAAK,OAAIC,EAASD,EAAb,GACf,GAAE,CAACE,KAGF,gCACGF,IAAS,uBAAIA,IACbR,IAAW,SAAC,EAAD,CAAaA,QAASA,MAC/BA,GAA8B,IAAnBA,EAAQkB,UACpB,0BACE,uBAAG,6BAKZ,C,qIC7BKC,EAAU,mCACVC,EAAW,8BAEJC,EAAiB,mCAAG,6FACzBC,EADyB,UAChBF,EADgB,mCACmBD,EADnB,oBAERI,MAAMD,GAFE,cAEzBE,EAFyB,gBAGlBA,EAASC,OAHS,mFAAH,qDAMjBC,EAAY,mCAAG,WAAMrB,GAAN,gFACpBiB,EADoB,UACXF,EADW,mBACQf,EADR,oBACsBc,EADtB,oBAEHI,MAAMD,GAFH,cAEpBE,EAFoB,gBAGbA,EAASC,OAHI,mFAAH,sDAMZZ,EAAiB,mCAAG,WAAMR,GAAN,gFACvBiB,EADuB,UACdF,EADc,mBACKf,EADL,2CAC0Cc,EAD1C,oBAEJI,MAAMD,GAFF,cAErBE,EAFqB,gBAGdA,EAASC,OAHK,mFAAH,qD","sources":["components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","utils/api.js"],"sourcesContent":["const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(info => {\n        return (\n          <li key={info.id}>\n            <p>\n              <span>Reviewer:</span> {info.author}\n            </p>\n            <p>{info.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default ReviewsList;\n","import ReviewsList from 'components/ReviewsList/ReviewsList';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsOfMovie } from 'utils/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    getReviewsOfMovie(moviesId)\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => setError(error));\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <p>{error}</p>}\n      {reviews && <ReviewsList reviews={reviews}></ReviewsList>}\n      {(!reviews || reviews.length === 0) && (\n        <div>\n          <p>There is no reviews!</p>\n        </div>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","const API_KEY = 'f8717161caaf1418c951ed37d4ef3a4b';\nconst BASE_URL = 'https://api.themoviedb.org/';\n\nexport const getTrendingMovies = async () => {\n  const URL = `${BASE_URL}3/movie/popular?api_key=${API_KEY}&page=1`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getMovieById = async id => {\n  const URL = `${BASE_URL}3/movie/${id}?api_key=${API_KEY}&page=1`;\n  const response = await fetch(URL);\n  return await response.json();\n};\n\nexport const getReviewsOfMovie = async id => {\n    const URL = `${BASE_URL}3/movie/${id}/reviews?language=en-US&api_key=${API_KEY}&page=1`;\n      const response = await fetch(URL);\n      return await response.json();\n}"],"names":["reviews","map","info","author","content","id","useState","setReviews","error","setError","moviesId","useParams","useEffect","getReviewsOfMovie","then","data","results","catch","length","API_KEY","BASE_URL","getTrendingMovies","URL","fetch","response","json","getMovieById"],"sourceRoot":""}